version: "3"

networks:
  kong-net:
    driver: bridge

services:
  #######################################
  # Kong database migration
  #######################################
  kong-migration:
    image: kong:latest
    command: "kong migrations bootstrap"
    restart: on-failure
    environment:
      KONG_PG_HOST: 54.151.132.96
      KONG_PG_PASSWORD: postgres
      KONG_PG_USER: postgres
  #######################################
  # Kong: The API Gateway
  #######################################
  kong:
    build:
      context: ./kong
      dockerfile: Dockerfile
    restart: always
    environment:
      KONG_PROXY_LISTEN: 0.0.0.0:8000
      KONG_PROXY_LISTEN_SSL: 0.0.0.0:8443
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_PG_HOST: 54.151.132.96
      KONG_PG_PASSWORD: postgres
      KONG_PG_USER: postgres
      KONG_LUA_SSL_TRUSTED_CERTIFICATE: system
      KONG_PLUGINS: bundled, kong-auth-request
    depends_on:
      - kong-migration
    healthcheck:
      test: ["CMD", "curl", "-f", "http://kong:8001"]
      interval: 5s
      timeout: 2s
      retries: 15
    ports:
      - "8001:8001"
      - "80:8000"
      - "443:8443"


  #######################################
  # Konga database prepare
  #######################################
  konga-prepare:
    image: pantsel/konga:next
    command: "-c prepare -a postgres -u postgresql://postgres:postgres@54.151.132.96:5432/kong"
    restart: on-failure
  konga:
    image: pantsel/konga:next
    restart: always
    environment:
      DB_ADAPTER: postgres
      DB_USER: postgres
      DB_PASSWORD: postgres
      TOKEN_SECRET: km1GUr4RkcQD7DewhJPNXrCuZwcKmqjb
      DB_DATABASE: kong
      DB_HOST: 54.151.132.96
      DB_PORT: 5432
      NODE_ENV: production
    ports:
      - "1337:1337"